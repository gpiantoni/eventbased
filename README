A pipeline of MATLAB functions to run Fieldtrip for EEG/MEG analysis


-----------------------------------------------------------
MAIN FUNCTIONS
-----------------------------
PREPROCESSING
- SELDATA: get data from recordings and put them in subject directory
- GCLEAN: use German's toolbox to clean the data
- REDEF: redefine trials
-----------------------------

-----------------------------
ANALYSIS
- ERP_SUBJ: timelock-analysis for each subject
- ERP_GRAND: timelock-analysis over subjects
- POW_SUBJ: power-analysis for each subject
- POW_GRAND: power-analysis over subjects
- POWCORR_SUBJ: power-trial correlation for each subject
- POWCORR_GRAND: power-trial correlation over subjects


-----------------------------
-----------------------------------------------------------

-----------------------------------------------------------
SUBFUNCTIONS
- LOAD_DATA: load data, and optionally get bad channels
  ERP_SUBJ, POW_SUBJ, POWCORR_SUBJ, 

- LOAD_SUBJ: load single-subject data
  ERP_GRAND, POW_GRAND, 
  
- LOAD_SOURCE: load source data from virtual electrode
  ERP_SUBJ, POW_SUBJ, POWCORR_SUBJ,
  
- REPORT_CLUSTER: report which clusters are significant
  ERP_GRAND, POW_GRAND, 



-----------------------------------------------------------

-----------------------------------------------------------
INFO
.data: path of /data1/projects/PROJ/subjects/
  SELDATA, GCLEAN, REDEF, LOAD_DATA, 

.derp: directory with ERP data
  ERP_SUBJ, LOAD_SUBJ,

.dpow: directory with POW data
  POW_SUBJ, POWCORR_SUBJ, LOAD_SUBJ, 
  
.dsou: directory with SOURCE data
  LOAD_SOURCE,

.log: name of the file and directory to save log
  SELDATA, GCLEAN, REDEF, ERP_SUBJ, ERP_GRAND, POW_SUBJ, POW_GRAND, POWCORR_SUBJ, 

.mod: modality, MOD in /data1/projects/PROJ/subjects/SUBJ/MOD/NICK/
  SELDATA, GCLEAN, REDEF, LOAD_DATA, 

.nick: NICK in /data1/projects/PROJ/subjects/SUBJ/MOD/NICK/
  SELDATA, GCLEAN, REDEF, LOAD_DATA, 

.qlog: directory with output of SGE
  SELDATA, 

.rec: REC in /data1/projects/PROJ/recordings/REC/
  LOAD_DATA, 

.recs: path of /data1/projects/PROJ/recordings/REC/subjects/
  SELDATA, 
  
.rslt: directory images are saved into
  ERP_GRAND, POW_GRAND,

.sens.dist: distance between sensors to consider them neighbors (in the units of cfg.sens.file)
  GCLEAN, REPORT_CLUSTER

.sens.file: file with EEG sensors. It can be sfp or mat. It's included in data struct. If empty, it does not read the sensors.
  SELDATA, GCLEAN,

.sens.layout: file with layout. It should be a mat containing 'layout'. If empty, it does not plot topo.
  ERP_GRAND, POW_GRAND, 
-----------------------------------------------------------
  
-----------------------------------------------------------
CFG.OPT

.bad_samples.MADs = 5;
  GCLEAN,

.bad_channels.MADs = 8;
  GCLEAN,

.bad_samples.Percentile = [25 75];
  GCLEAN,
  
.bl: Baseline correction at the single-trial level. If empty, no baseline. Otherwise:
  POW_SUBJ,
  
.bl.baseline: two scalars with baseline windows
  POW_SUBJ,
  
.bl.baselinetype: type of baseline ('relchange')
  POW_SUBJ,

.clusterthr: threshold of the cluster
  REPORT_CLUSTER,
  
.comp*: comparisons to test (cell within cell, e.g. {{'cond1' 'cond2'} {'cond1'} {'cond2'}}), but you cannot have more than 2 conditions (it's always a t-test). If empty, not statistics and no plots.
  ERP_GRAND, POW_GRAND, 
  
.cond: cell with conditions (e.g. {'*cond1' '*cond2'})'
  ERP_SUBJ, ERP_GRAND, POW_SUBJ, POW_GRAND
 
.csd.method: method to do scalp current density ('finite' or 'spline' or 'hjorth')
  REDEF,

.eog.correction = 50;
  GCLEAN,

.emg.correction = 30;
  GCLEAN,

.erp: a structure with cfg to pass to ft_timelockanalysis
  ERP_SUBJ,

.event2trl: function name in NICK_private which creates the correct trl based on events
  REDEF,

.fsample: manually specify the frequency (very easily bug-prone, but in this way it does not read "data" all the time)
  GCLEAN,

.label: if not empty, labels of electrodes to rename (same length as seldata.selchan) 
  SELDATA, 

.lpfreqn = [.3 / (cfg.gclean.fsample/2)]; % normalized by half of the sampling frequency!
  GCLEAN,

.numrandomization: number of randomization
  REPORT_CLUSTER, 
  
.plot.bline: two scalars indicating the time window for baseline in s (only for plotting, TODO: check if necessary for normal analysis as well)
  ERP_GRAND,
  
.plot.chan(1).name: 'name_of_channels'
  ERP_GRAND, POW_GRAND, 

.plot.chan(1).chan: cell with labels of channels of interest
  ERP_GRAND, POW_GRAND, 
  
.plot.freq(1).name: 'name_of_frequency'
  POW_GRAND, 

.plot.freq(1).freq: two scalars with the frequency limits
  POW_GRAND, 
  
.planar: planar transformation, MEG-only (logical)
  POW_SUBJ,

.pow: a structure with cfg to pass to ft_freqanalysis
  POW_SUBJ, POWCORR_SUBJ, 
  
.powcorr: column of trialinfo to use for the correlation
  POWCORR_SUBJ,

.powlog: logical (take the log of power, strongly advised)
  POWCORR_SUBJ, 

.preproc1: struct to pass to ft_preprocessing before cutting trials (if empty, no preprocessing)
  REDEF,

.preproc2: struct to pass to ft_preprocessing after cutting trials (if empty, no preprocessing)
  REDEF,

.pwl.pca: if not empty, number of PC to work with in JADE
  GCLEAN,

.rcnd: specific name of the condition of interest in the raw recording folder
  SELDATA, 
  
.redef: options to pass to event2trl 
  REDEF, 

.saveall: false
  GCLEAN,

.selchan: channels to read. It can be a vector or a cell of strings with the elec names on file (Micromed elec names are '  1' '  2'  '  3') 
  SELDATA, 

.source: read virtual electrode data (logical)
  ERP_SUBJ, POW_SUBJ, 

.stat.time: latency of interest (two scalar)
  REPORT_CLUSTER,

.stat.freq: frequency of interest (two scalar)
  REPORT_CLUSTER,
  
.trialfun: name of the trialfun used to read the data, see below. The function should be in NICK_private/ 
  SELDATA, 

.verbose: true
  GCLEAN,

REDEF, 

-----------------------------------------------------------

 
 
